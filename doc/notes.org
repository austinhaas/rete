* TODO
** Fix rule priority.
   - Currently, rules are stored in a sorted set by [priority
     id]. Since ids are generated in rule order, and older gensyms
     compare lower that newer gensyms, the rules are prioritized
     correctly. But I don't think we should rely on gensym sorting
     order, since that isn't a documented feature of Clojure.
** Warn if cache? is supplied, but inv-match is not.
** Make sure this still works with Clojurescript.
** Add documentation.
   - [tag & vals] = relational data tuples.
   - Explain that achieves and deletes may contain arbitrary expressions.
   - Explain why :fn might be necessary.
     - Something to do with not knowing all the output tags at compile
       time?
** Write more tests.
** Validate rules.
*** Check that all input fields are valid.
    - Signal error if a field isn't used.
      - For example, collapse-matches instead of collapse-matches?.
** Write tutorial.
